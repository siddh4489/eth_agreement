{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Button, Container, Divider, Grid, Header, Icon, Image, List, Menu, Responsive, Segment, Sidebar, Visibility } from \"semantic-ui-react\";\n/* eslint-disable react/no-multi-comp */\n\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\r\n * such things.\r\n */\n\nconst HomepageHeading = ({\n  mobile\n}) => __jsx(Container, {\n  text: true\n}, __jsx(Header, {\n  as: \"h1\",\n  content: \"Imagine-a-Company\",\n  inverted: true,\n  style: {\n    fontSize: mobile ? \"2em\" : \"4em\",\n    fontWeight: \"normal\",\n    marginBottom: 0,\n    marginTop: mobile ? \"1.5em\" : \"3em\"\n  }\n}), __jsx(Header, {\n  as: \"h2\",\n  content: \"Do whatever you want when you want to.\",\n  inverted: true,\n  style: {\n    fontSize: mobile ? \"1.5em\" : \"1.7em\",\n    fontWeight: \"normal\",\n    marginTop: mobile ? \"0.5em\" : \"1.5em\"\n  }\n}), __jsx(Button, {\n  primary: true,\n  size: \"huge\"\n}, \"Get Started\", __jsx(Icon, {\n  name: \"right arrow\"\n})));\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool\n};\n/* Heads up!\r\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n * It can be more complicated, but you can create really flexible markup.\r\n */\n\nclass DesktopContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"hideFixedMenu\", () => this.setState({\n      fixed: false\n    }));\n\n    _defineProperty(this, \"showFixedMenu\", () => this.setState({\n      fixed: true\n    }));\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      fixed\n    } = this.state;\n    return __jsx(Responsive, {\n      minWidth: Responsive.onlyTablet.minWidth\n    }, __jsx(Visibility, {\n      once: false,\n      onBottomPassed: this.showFixedMenu,\n      onBottomPassedReverse: this.hideFixedMenu\n    }, \"siddhraj\"), children);\n  }\n\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node\n};\n\nclass MobileContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"handlePusherClick\", () => {\n      const {\n        sidebarOpened\n      } = this.state;\n      if (sidebarOpened) this.setState({\n        sidebarOpened: false\n      });\n    });\n\n    _defineProperty(this, \"handleToggle\", () => this.setState({\n      sidebarOpened: !this.state.sidebarOpened\n    }));\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      sidebarOpened\n    } = this.state;\n    return __jsx(Responsive, {\n      maxWidth: Responsive.onlyMobile.maxWidth\n    }, __jsx(Sidebar.Pushable, null, __jsx(Sidebar, {\n      as: Menu,\n      animation: \"uncover\",\n      inverted: true,\n      vertical: true,\n      visible: sidebarOpened\n    }, __jsx(Menu.Item, {\n      as: \"a\",\n      active: true\n    }, \"Home\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Work\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Company\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Careers\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Log in\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Sign Up\")), __jsx(Sidebar.Pusher, {\n      dimmed: sidebarOpened,\n      onClick: this.handlePusherClick,\n      style: {\n        minHeight: \"100vh\"\n      }\n    }, __jsx(Segment, {\n      inverted: true,\n      textAlign: \"center\",\n      style: {\n        minHeight: 350,\n        padding: \"1em 0em\"\n      },\n      vertical: true\n    }, __jsx(Container, null, __jsx(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      size: \"large\"\n    }, __jsx(Menu.Item, {\n      onClick: this.handleToggle\n    }, __jsx(Icon, {\n      name: \"sidebar\"\n    })), __jsx(Menu.Item, {\n      position: \"right\"\n    }, __jsx(Button, {\n      as: \"a\",\n      inverted: true\n    }, \"Log in\"), __jsx(Button, {\n      as: \"a\",\n      inverted: true,\n      style: {\n        marginLeft: \"0.5em\"\n      }\n    }, \"Sign Up\")))), __jsx(HomepageHeading, {\n      mobile: true\n    })), children)));\n  }\n\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst ResponsiveContainer = ({\n  children\n}) => __jsx(\"div\", null, __jsx(DesktopContainer, null, children), __jsx(MobileContainer, null, children));\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node\n};\n\nclass Home extends Component {\n  render() {\n    return __jsx(ResponsiveContainer, null, \"wow\");\n  }\n\n}\n\nconst connectedApp = connect(state => state)(Home);\nexport { connectedApp as Home };","map":null,"metadata":{},"sourceType":"module"}