{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport Header from '../../components/Header';\nimport actions from '../../redux/actions/counterActions';\n\nclass Home extends Component {\n  //test\n  static getInitialProps({\n    store\n  }) {}\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"incrementCounter_rt\", () => {\n      alert(1);\n      this.props.incrementCounter({\n        value: this.props.counter.mathVal\n      }, 'incrementCounter');\n    });\n  }\n\n  render() {\n    /*function incrementCounter_rt() {\r\n      this.props.incrementCounter(\r\n        {value: this.props.counter.mathVal},\r\n        'incrementCounter'\r\n      );\r\n    }*/\n    return __jsx(\"div\", null, __jsx(\"button\", {\n      onClick: this.incrementCounter_rt\n    }, \"Increment\"), __jsx(\"button\", {\n      onClick: this.props.decrementCounter_rt\n    }, \"Decrement\"), __jsx(\"button\", {\n      onClick: this.props.reset_rt\n    }, \"Reset\"), __jsx(\"button\", {\n      onClick: this.props.reset_rt\n    }, \"Add\"), __jsx(\"h1\", null, this.props.counter.mathVal));\n  }\n\n}\n\nconst mapStateToProps = state => ({//counter: state.counter.mathVal\n});\n\nconst mapDispatchToProps = {//incrementCounter_rt: incrementCounter,\n  //decrementCounter_rt: decrementCounter,\n  // reset_rt: reset,\n}; //export default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nexport default connect(state => state, actions)(Home); //export default Home;","map":null,"metadata":{},"sourceType":"module"}