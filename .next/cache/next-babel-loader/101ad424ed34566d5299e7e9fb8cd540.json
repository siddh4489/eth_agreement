{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button, Container, Divider, Grid, Header, Icon, Image, List, Menu, Responsive, Segment, Sidebar, Visibility } from \"semantic-ui-react\";\nimport { Link } from '../routes';\nimport { connect } from 'react-redux';\nimport actions from '../redux/actions/authActions';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport HeaderSegment from './HeaderSegment'; //import { useAuth0 } from '../../contexts/auth0-context';\n\nconst HomepageHeading = ({\n  mobile\n}) => __jsx(Container, {\n  text: true\n}, __jsx(Header, {\n  as: \"h1\",\n  content: \"Wine Tripping\",\n  inverted: true,\n  style: {\n    fontSize: mobile ? '2em' : '4em',\n    fontWeight: 'normal',\n    marginBottom: 0,\n    marginTop: mobile ? '1.5em' : '3em'\n  }\n}), __jsx(Header, {\n  as: \"h2\",\n  content: \"Find your favorite region with us...\",\n  inverted: true,\n  style: {\n    fontSize: mobile ? '1.5em' : '1.7em',\n    fontWeight: 'normal',\n    marginTop: mobile ? '0.5em' : '1.5em'\n  }\n}), __jsx(Button, {\n  primary: true,\n  size: \"huge\"\n}, \"Plan a trip\", __jsx(Icon, {\n  name: \"right arrow\"\n})));\n\nclass Auth0Connection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"initializeAuth0\", async () => {\n      const auth0Client = await createAuth0Client(this.config);\n      console.log('auth0Client : ' + JSON.stringify(auth0Client));\n      this.setState({\n        auth0Client\n      }); // check to see if they have been redirected after login\n\n      if (window.location.search.includes('code=')) {\n        return this.handleRedirectCallback();\n      }\n\n      const isAuthenticated = await auth0Client.isAuthenticated();\n      const user = isAuthenticated ? await auth0Client.getUser() : null;\n      console.log('user : ' + JSON.stringify(user));\n      this.setState({\n        isLoading: false,\n        isAuthenticated,\n        user\n      });\n    });\n\n    _defineProperty(this, \"handleRedirectCallback\", async () => {\n      this.setState({\n        isLoading: true\n      });\n      await this.state.auth0Client.handleRedirectCallback();\n      const user = await this.state.auth0Client.getUser();\n      this.setState({\n        user,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      window.history.replaceState({}, document.title, window.location.pathname);\n    });\n\n    this.state = {\n      auth0Client: null,\n      isLoading: true,\n      isAuthenticated: false,\n      user: []\n    };\n    this.config = {\n      domain: process.env.REACT_APP_AUTH0_DOMAIN || 'dev-14avhjuy.auth0.com',\n      client_id: process.env.REACT_APP_AUTH0_CLIENT_ID || 'ZJ14f961zjftMYbOBnZPnEGJd3ZHyQJC',\n      redirect_uri: 'http://localhost:3000/'\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeAuth0();\n  } // initialize the auth0 library\n\n\n  login(e) {\n    const {\n      auth0Client\n    } = this.state; //this.setState({data: e.target.value});\n\n    auth0Client.loginWithRedirect({\n      redirect_uri: 'http://localhost:3000/'\n    }).then(token => {\n      auth0Client.getUser().then(user => {\n        this.setState({\n          user\n        });\n        console.log('---here--' + user);\n      });\n    });\n  }\n\n  logout(e) {\n    const {\n      auth0Client\n    } = this.state;\n    auth0Client.logout();\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(DesktopContainer, {\n      auth0: this.state,\n      login: this.login,\n      logout: this.logout\n    }), __jsx(MobileContainer, {\n      auth0: this.state,\n      login: this.login,\n      logout: this.logout\n    }));\n  }\n\n}\n\nclass DesktopContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"hideFixedMenu\", () => this.setState({\n      fixed: false\n    }));\n\n    _defineProperty(this, \"showFixedMenu\", () => this.setState({\n      fixed: true\n    }));\n  }\n\n  render() {\n    console.log('Desktop');\n    const {\n      children\n    } = this.props;\n    const {\n      fixed\n    } = this.state;\n    return __jsx(Responsive, Responsive.onlyComputer, __jsx(Visibility, {\n      once: false,\n      onBottomPassed: this.showFixedMenu,\n      onBottomPassedReverse: this.hideFixedMenu\n    }, __jsx(Segment, {\n      inverted: true,\n      textAlign: \"center\",\n      style: {\n        minHeight: 700,\n        padding: '1em 0em'\n      },\n      vertical: true\n    }, __jsx(Menu, {\n      fixed: fixed ? 'top' : null,\n      inverted: !fixed,\n      pointing: !fixed,\n      secondary: !fixed,\n      size: \"large\"\n    }, __jsx(Container, null, __jsx(Menu.Item, {\n      as: \"a\",\n      active: true\n    }, \"Home\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Explore\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Plan Trip\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Sommelier\"), __jsx(Menu.Item, {\n      position: \"right\"\n    }, !this.props.auth0.isLoading && !this.props.auth0.user && __jsx(Button, {\n      as: \"a\",\n      onClick: this.props.login,\n      inverted: !fixed\n    }, \"Log in\"), !this.props.auth0.isLoading && this.props.auth0.user && __jsx(React.Fragment, null, __jsx(\"h1\", null, this.props.auth0.user.name), __jsx(Button, {\n      as: \"a\",\n      onClick: this.props.logout,\n      inverted: !fixed,\n      primary: fixed,\n      style: {\n        marginLeft: '0.5em'\n      }\n    }, \"Logout\"))))), !this.props.auth0.isLoading && this.props.auth0.user && __jsx(React.Fragment, null, __jsx(\"h1\", null, \"You are logged in!\"), __jsx(\"p\", null, \"Hello \", this.props.auth0.user.name, \"--\", this.props.auth0.user.email, \"--\"), this.props.auth0.user.picture && __jsx(\"img\", {\n      src: this.props.auth0.user.picture,\n      alt: \"My Avatar\"\n    })), !this.props.auth0.isLoading && !this.props.auth0.user && __jsx(HomepageHeading, null))), !this.props.auth0.isLoading && !this.props.auth0.user && __jsx(HeaderSegment, null));\n  }\n\n}\n\nclass MobileContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"handlePusherClick\", () => {\n      const {\n        sidebarOpened\n      } = this.state;\n      if (sidebarOpened) this.setState({\n        sidebarOpened: false\n      });\n    });\n\n    _defineProperty(this, \"handleToggle\", () => this.setState({\n      sidebarOpened: !this.state.sidebarOpened\n    }));\n  }\n\n  render() {\n    console.log('mobile');\n    const {\n      children\n    } = this.props;\n    const {\n      sidebarOpened\n    } = this.state;\n    return __jsx(Responsive, Responsive.onlyMobile, __jsx(Sidebar.Pushable, null, __jsx(Sidebar, {\n      as: Menu,\n      animation: \"uncover\",\n      inverted: true,\n      vertical: true,\n      visible: sidebarOpened\n    }, __jsx(Menu.Item, {\n      as: \"a\",\n      active: true\n    }, \"Home\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Explore\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Plan Trip\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Sommelier\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Log in\"), __jsx(Menu.Item, {\n      as: \"a\"\n    }, \"Sign Up\")), __jsx(Sidebar.Pusher, {\n      dimmed: sidebarOpened,\n      onClick: this.handlePusherClick,\n      style: {\n        minHeight: '100vh'\n      }\n    }, __jsx(Segment, {\n      inverted: true,\n      textAlign: \"center\",\n      style: {\n        minHeight: 350,\n        padding: '1em 0em'\n      },\n      vertical: true\n    }, __jsx(Container, null, __jsx(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      size: \"large\"\n    }, __jsx(Menu.Item, {\n      onClick: this.handleToggle\n    }, __jsx(Icon, {\n      name: \"sidebar\"\n    })), __jsx(Menu.Item, {\n      position: \"right\"\n    }, !this.props.auth0.isLoading && !this.props.auth0.user && __jsx(Button, {\n      as: \"a\",\n      onClick: this.props.login,\n      inverted: true\n    }, \"Log in\"), !this.props.auth0.isLoading && this.props.auth0.user && __jsx(Button, {\n      as: \"a\",\n      onClick: this.props.logout,\n      inverted: true,\n      style: {\n        marginLeft: '0.5em'\n      }\n    }, \"Logout\")))), !this.props.auth0.isLoading && !this.props.auth0.user && __jsx(HomepageHeading, {\n      mobile: true\n    })), !this.props.auth0.isLoading && !this.props.auth0.user && __jsx(HeaderSegment, null))));\n  }\n\n}\n\nexport default connect(state => state, actions)(Auth0Connection);","map":null,"metadata":{},"sourceType":"module"}